//
//  SighInWithAppleViewController.swift
//  ITmentors
//
//  Created by Alexey Vadimovich on 21.11.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//
import CryptoKit
import UIKit
import AuthenticationServices

protocol SignInWithAppleDisplayLogic: AnyObject {
    func goToNextScreen()
    func showErrorDataLoading()
}

class SignInWithAppleViewController: UIViewController, SignInWithAppleDisplayLogic {
    
    var creds: ASAuthorizationAppleIDCredential?
    var interactor: SignInWithAppleBusinessLogic?
    var router: (NSObjectProtocol & SignInWithAppleRoutingLogic & SignInWithAppleDataPassing)?
    
    // MARK: lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        SignInWithAppleConfigurator.shared.configure(with: self)
        
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        SignInWithAppleConfigurator.shared.configure(with: self)
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        addSubviews()
    }
    
    
    // MARK: - Interactor tasks
    
    func startFlow() {
        let request = SignInWithApple.SignInFlow.Request(addRegistarationWindowOnViewController: self)
        interactor?.startFlow(request: request)
        print(1)
    }
    
    //MARK: - Presentor tasks
    func goToNextScreen() {
        let nextVC = FillDataViewController()
        router?.navigateToSomewhere(source: self, destination: nextVC)
    }
    
    func showErrorDataLoading() {
        let alert = UIAlertController(title: "Ошибка загрузки данных", message: "Не удалось загрузить данные на сервер", preferredStyle: .alert)
        alert.addAction(UIAlertAction(title: "Что ж", style: .cancel))
        present(alert, animated: true)
    }
  
    private let appleButton : ASAuthorizationAppleIDButton = {
        let appleButton = ASAuthorizationAppleIDButton(type: .continue, style: .black)
        appleButton.cornerRadius = 12
        appleButton.addTarget(self, action: #selector(startSignInWithAppleFlow), for: .touchUpInside)
        return appleButton
    }()
    
    private let mentorImage: UIImageView = {
        let i = UIImageView(image: UIImage(named: "mentorImage"))
       return i
    }()
    private let label: UILabel = {
        let l = UILabel()
        l.text = "Чтобы стать ментором, необходимо войти в аккаунт через AppleID"
        l.textColor = .white
        l.textAlignment = .center
        l.numberOfLines = 0
        l.lineBreakMode = .byWordWrapping
      return l
    }()
    
    @objc func startSignInWithAppleFlow(){
        startFlow()
    }
}
extension SignInWithAppleViewController: ASAuthorizationControllerDelegate {
    func authorizationController(controller: ASAuthorizationController, didCompleteWithAuthorization authorization: ASAuthorization) {
            print("ура")
        creds = authorization.credential as? ASAuthorizationAppleIDCredential
        print(creds?.fullName)
        interactor?.loadDataToFirebase(credentials: authorization.credential, auth: authorization)
    }
    func authorizationController(controller: ASAuthorizationController, didCompleteWithError error: Error) {
        showErrorAlert(error: error)
    }
}

extension SignInWithAppleViewController {
    func addSubviews(){
        title = "Вход/регистрация"
        view.backgroundColor = .AppPalette.backgroundColor
        navigationItem.hidesBackButton = true

        view.addSubview(appleButton)
        view.addSubview(label)
        view.addSubview(mentorImage)


        label.snp.makeConstraints { make in
            make.top.equalToSuperview().offset(30)
            make.left.equalToSuperview().offset(20)
            make.right.equalToSuperview().offset(-30)
        }

        mentorImage.snp.makeConstraints { make in
            make.top.equalTo(label.snp.bottom).offset(30)
            make.left.equalToSuperview().offset(40)
            make.right.equalToSuperview().offset(-40)
            make.height.equalTo(mentorImage.snp.width)
        }

        appleButton.snp.makeConstraints { make in
            make.top.equalTo(mentorImage.snp.bottom).offset(30)
            make.left.equalToSuperview().offset(30)
            make.right.equalToSuperview().offset(-30)
            make.height.equalTo(50)
        }

    }
}

extension SignInWithAppleViewController{
    func showErrorAlert(error: Error){
        let dialogMessage = UIAlertController(title: "Ошибка", message: "\(error)", preferredStyle: .alert)
        let ok = UIAlertAction(title: "Что ж :(", style: .default)
         dialogMessage.addAction(ok)
        self.present(dialogMessage, animated: true)

    }
}
