//
//  FillDataViewController.swift
//  ITmentors
//
//  Created by Alexey Vadimovich on 30.09.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol FillDataDisplayLogic: AnyObject {
    func displayCompletion(viewModel: FillData.LoadDataOnServer.ViewModel)
    func pasteDataFromProfile(viewMode: FillData.TransferDataFromProfileToEditScreen.ViewModel)
}

class FillDataViewController: UIViewController, FillDataDisplayLogic, UINavigationControllerDelegate {
    var isBackButtonHidden = false
    
    var isItDataEditingScreen = false{
        didSet{
            if isItDataEditingScreen == true{
                interactor?.getYourInfo()
                print(12)
            }
        }
    }
    
    private lazy var presentationView: FillDataView = {
        let view = FillDataView()
        view.delegate = self
        return view
    }()

    var interactor: FillDataBusinessLogic?
    var router: (NSObjectProtocol & FillDataRoutingLogic & FillDataDataPassing)?

    
//    init(isBackButtonHidden: Bool, isItDataEditingScreen: Bool) {
//        self.isBackButtonHidden = isBackButtonHidden
//        self.isItDataEditingScreen = isItDataEditingScreen
//        super.init(nibName: nil, bundle: nil)
//    }
    // MARK: Object lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        FillDataConfigurator.shared.configure(with: self)
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        FillDataConfigurator.shared.configure(with: self)
    }

    // MARK: View lifecycle

    override func loadView() {
        super.loadView()
        view = presentationView
    }
    override func viewDidLoad() {
        super.viewDidLoad()
        navigationItem.hidesBackButton = isBackButtonHidden
    }
 

 
//MARK: - Presenter tasks
    func displayCompletion(viewModel: FillData.LoadDataOnServer.ViewModel) {
        if viewModel.isSuccesed == true{
            navigationController?.popToRootViewController(animated: true)
            let rootVC = navigationController?.viewControllers.last as? ProfileScreenViewController
            print(navigationController?.viewControllers)
            print(rootVC)
            rootVC?.updateScreenAfterDataFilling()
        }
        else {
            let dialogMessage = UIAlertController(title: "Ошибка", message: "Не удалось загрузить данные на сервер. Попробуйте проверить сетевое соединение", preferredStyle: .alert)
            let ok = UIAlertAction(title: "Что ж :(", style: .default)
             dialogMessage.addAction(ok)
            self.present(dialogMessage, animated: true)
        }
    }

    func pasteDataFromProfile(viewMode: FillData.TransferDataFromProfileToEditScreen.ViewModel){
        presentationView.viewModel = viewMode
    }
}

extension FillDataViewController: FillDataViewDelegate{
    func dismiss() {
        dismiss(animated: true)
    }
    func presentAlert(_ alert: UIAlertController) {
        present(alert, animated: true)
    }
    func presentImagePicker(_ picker: UIImagePickerController) {
        present(picker, animated: true)
    }
    func alertOfInvalidRef() {
        let alert = UIAlertController(title: "Недействительная ссылка", message: "Проверьте правильность введенной ссылки, она должна начинаться с https://", preferredStyle: .alert)
        let ok = UIAlertAction(title: "Что ж :(", style: .cancel)
        alert.addAction(ok)
        present(alert, animated: true)
    }
    
    func confirmSuccess(with: FillData.LoadDataOnServer.Request) {
        interactor?.loadInfoToFirebase(request: with)
    }
    
    func confirmError() {
        let alert = UIAlertController(title: "Не все поля запонены", message: "Необходимо, чтобы все поля были заполнены и языки программироавния были выбраны.", preferredStyle: .alert)
        alert.addAction(UIAlertAction(title: "Что ж", style: .cancel))
        present(alert, animated: true)
    }
    
    func selectLanguageTransition(){
        let selectLanguagesVC = SelectLanguagesViewController()
        selectLanguagesVC.returnArrayOfLanguagesToPreviousScreenDelegate = self
        router?.navigateToSomewhere(source: self, destination: selectLanguagesVC)
    }
}
extension FillDataViewController: ReturnArrayOfLanguagesToPreviousScreenProtocol{
    func getArray(array: [Language]) {
        presentationView.arrayOfLanguages = array
        presentationView.layoutCollectionView()
    }
}
